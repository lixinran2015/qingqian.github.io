<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/conf/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<context:component-scan base-package="chances.epg.data.service"  />
	<context:component-scan base-package="chances.epg.data.helper"  />
	<context:component-scan base-package="chances.epg.search.searcher"  />
	
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>${jdbc.pool.initialSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${jdbc.pool.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${jdbc.pool.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${jdbc.pool.maxIdleTime}</value>
		</property>	
		<property name="numHelperThreads">
			<value>${jdbc.pool.numHelperThreads}</value>
		</property>		
		<property name="acquireRetryDelay">
			<value>${jdbc.pool.acquireRetryDelay}</value>
		</property>		
		<property name="acquireRetryAttempts">
			<value>${jdbc.pool.acquireRetryAttempts}</value>
		</property>		
		<property name="acquireIncrement">
			<value>${jdbc.pool.acquireIncrement}</value>
		</property>	
		<property name="breakAfterAcquireFailure">
			<value>${jdbc.pool.breakAfterAcquireFailure}</value>
		</property>	
	</bean>

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="sqlExecutor" class="chances.epg.data.ibatis.LimitSqlExecutor">
		<property name="dialect">
			<bean class="chances.epg.data.ibatis.MySQLDialect" />
		</property>
	</bean>

	<bean id="countDao" class="chances.epg.data.ibatis.CountDao" init-method="initialize">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref bean="sqlMapClient" />
		</property>
		<property name="sqlExecutor">
			<ref bean="sqlExecutor" />
		</property>		
	</bean>
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="message" />
	</bean>
	
	
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath">
			<value>WEB-INF/template</value>
		</property>
		<property name="overrideLogging">
			<value>true</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">file</prop>
				<prop key="file.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.FileResourceLoader
				</prop>
				<prop key="file.resource.loader.cache">true</prop>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				
				<prop key="velocimacro.library.autoreload">true</prop>
				<prop
					key="velocimacro.permissions.allow.inline.to.replace.global">
					true
				</prop>
			</props>
		</property>
	</bean>
</beans>